"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/set-admin/page",{

/***/ "(app-pages-browser)/./app/admin/set-admin.ts":
/*!********************************!*\
  !*** ./app/admin/set-admin.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setAdminAccess: function() { return /* binding */ setAdminAccess; }\n/* harmony export */ });\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase/client */ \"(app-pages-browser)/./lib/supabase/client.ts\");\n\nasync function setAdminAccess(email) {\n    const supabase = (0,_lib_supabase_client__WEBPACK_IMPORTED_MODULE_0__.createClient)();\n    console.log(\"Setting admin access for:\", email);\n    try {\n        // Get the owner role ID\n        const { data: roleData, error: roleError } = await supabase.from(\"roles\").select(\"id\").eq(\"name\", \"owner\").single();\n        if (roleError) {\n            console.error(\"Error getting owner role:\", roleError);\n            throw roleError;\n        }\n        if (!roleData) {\n            throw new Error(\"Owner role not found\");\n        }\n        // Update user's role_id\n        const { error: updateRoleError } = await supabase.from(\"auth.users\").update({\n            role_id: roleData.id\n        }).eq(\"email\", email);\n        if (updateRoleError) {\n            console.error(\"Error updating user role:\", updateRoleError);\n            throw updateRoleError;\n        }\n        // Get the current user\n        const { data: { user }, error: userError } = await supabase.auth.getUser();\n        if (userError) {\n            console.error(\"Error getting user:\", userError);\n            throw userError;\n        }\n        if (!user) {\n            throw new Error(\"User not found\");\n        }\n        // Update user's metadata\n        const { error: updateError } = await supabase.auth.updateUser({\n            data: {\n                role: \"owner\",\n                isAdmin: true,\n                permissions: [\n                    \"menu:create\",\n                    \"menu:read\",\n                    \"menu:update\",\n                    \"menu:delete\",\n                    \"orders:create\",\n                    \"orders:read\",\n                    \"orders:update\",\n                    \"analytics:read\",\n                    \"users:manage\"\n                ]\n            }\n        });\n        if (updateError) {\n            console.error(\"Error updating user:\", updateError);\n            throw updateError;\n        }\n        // Refresh the session to apply changes\n        const { error: refreshError } = await supabase.auth.refreshSession();\n        if (refreshError) {\n            console.error(\"Error refreshing session:\", refreshError);\n            throw refreshError;\n        }\n        console.log(\"Successfully set admin access\");\n        return true;\n    } catch (error) {\n        console.error(\"Error in setAdminAccess:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9hZG1pbi9zZXQtYWRtaW4udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7QUFFN0MsZUFBZUMsZUFBZUMsS0FBYTtJQUNoRCxNQUFNQyxXQUFXSCxrRUFBWUE7SUFDN0JJLFFBQVFDLEdBQUcsQ0FBQyw2QkFBNkJIO0lBRXpDLElBQUk7UUFDRix3QkFBd0I7UUFDeEIsTUFBTSxFQUFFSSxNQUFNQyxRQUFRLEVBQUVDLE9BQU9DLFNBQVMsRUFBRSxHQUFHLE1BQU1OLFNBQ2hETyxJQUFJLENBQUMsU0FDTEMsTUFBTSxDQUFDLE1BQ1BDLEVBQUUsQ0FBQyxRQUFRLFNBQ1hDLE1BQU07UUFFVCxJQUFJSixXQUFXO1lBQ2JMLFFBQVFJLEtBQUssQ0FBQyw2QkFBNkJDO1lBQzNDLE1BQU1BO1FBQ1I7UUFFQSxJQUFJLENBQUNGLFVBQVU7WUFDYixNQUFNLElBQUlPLE1BQU07UUFDbEI7UUFFQSx3QkFBd0I7UUFDeEIsTUFBTSxFQUFFTixPQUFPTyxlQUFlLEVBQUUsR0FBRyxNQUFNWixTQUN0Q08sSUFBSSxDQUFDLGNBQ0xNLE1BQU0sQ0FBQztZQUFFQyxTQUFTVixTQUFTVyxFQUFFO1FBQUMsR0FDOUJOLEVBQUUsQ0FBQyxTQUFTVjtRQUVmLElBQUlhLGlCQUFpQjtZQUNuQlgsUUFBUUksS0FBSyxDQUFDLDZCQUE2Qk87WUFDM0MsTUFBTUE7UUFDUjtRQUVBLHVCQUF1QjtRQUN2QixNQUFNLEVBQUVULE1BQU0sRUFBRWEsSUFBSSxFQUFFLEVBQUVYLE9BQU9ZLFNBQVMsRUFBRSxHQUFHLE1BQU1qQixTQUFTa0IsSUFBSSxDQUFDQyxPQUFPO1FBQ3hFLElBQUlGLFdBQVc7WUFDYmhCLFFBQVFJLEtBQUssQ0FBQyx1QkFBdUJZO1lBQ3JDLE1BQU1BO1FBQ1I7UUFFQSxJQUFJLENBQUNELE1BQU07WUFDVCxNQUFNLElBQUlMLE1BQU07UUFDbEI7UUFFQSx5QkFBeUI7UUFDekIsTUFBTSxFQUFFTixPQUFPZSxXQUFXLEVBQUUsR0FBRyxNQUFNcEIsU0FBU2tCLElBQUksQ0FBQ0csVUFBVSxDQUFDO1lBQzVEbEIsTUFBTTtnQkFDSm1CLE1BQU07Z0JBQ05DLFNBQVM7Z0JBQ1RDLGFBQWE7b0JBQ1g7b0JBQ0E7b0JBQ0E7b0JBQ0E7b0JBQ0E7b0JBQ0E7b0JBQ0E7b0JBQ0E7b0JBQ0E7aUJBQ0Q7WUFDSDtRQUNGO1FBRUEsSUFBSUosYUFBYTtZQUNmbkIsUUFBUUksS0FBSyxDQUFDLHdCQUF3QmU7WUFDdEMsTUFBTUE7UUFDUjtRQUVBLHVDQUF1QztRQUN2QyxNQUFNLEVBQUVmLE9BQU9vQixZQUFZLEVBQUUsR0FBRyxNQUFNekIsU0FBU2tCLElBQUksQ0FBQ1EsY0FBYztRQUNsRSxJQUFJRCxjQUFjO1lBQ2hCeEIsUUFBUUksS0FBSyxDQUFDLDZCQUE2Qm9CO1lBQzNDLE1BQU1BO1FBQ1I7UUFFQXhCLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE9BQU87SUFDVCxFQUFFLE9BQU9HLE9BQU87UUFDZEosUUFBUUksS0FBSyxDQUFDLDRCQUE0QkE7UUFDMUMsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9hZG1pbi9zZXQtYWRtaW4udHM/NmZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAL2xpYi9zdXBhYmFzZS9jbGllbnQnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZXRBZG1pbkFjY2VzcyhlbWFpbDogc3RyaW5nKSB7XG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KClcbiAgY29uc29sZS5sb2coJ1NldHRpbmcgYWRtaW4gYWNjZXNzIGZvcjonLCBlbWFpbClcblxuICB0cnkge1xuICAgIC8vIEdldCB0aGUgb3duZXIgcm9sZSBJRFxuICAgIGNvbnN0IHsgZGF0YTogcm9sZURhdGEsIGVycm9yOiByb2xlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgncm9sZXMnKVxuICAgICAgLnNlbGVjdCgnaWQnKVxuICAgICAgLmVxKCduYW1lJywgJ293bmVyJylcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKHJvbGVFcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZ2V0dGluZyBvd25lciByb2xlOicsIHJvbGVFcnJvcilcbiAgICAgIHRocm93IHJvbGVFcnJvclxuICAgIH1cblxuICAgIGlmICghcm9sZURhdGEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignT3duZXIgcm9sZSBub3QgZm91bmQnKVxuICAgIH1cblxuICAgIC8vIFVwZGF0ZSB1c2VyJ3Mgcm9sZV9pZFxuICAgIGNvbnN0IHsgZXJyb3I6IHVwZGF0ZVJvbGVFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhdXRoLnVzZXJzJylcbiAgICAgIC51cGRhdGUoeyByb2xlX2lkOiByb2xlRGF0YS5pZCB9KVxuICAgICAgLmVxKCdlbWFpbCcsIGVtYWlsKVxuXG4gICAgaWYgKHVwZGF0ZVJvbGVFcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgdXBkYXRpbmcgdXNlciByb2xlOicsIHVwZGF0ZVJvbGVFcnJvcilcbiAgICAgIHRocm93IHVwZGF0ZVJvbGVFcnJvclxuICAgIH1cblxuICAgIC8vIEdldCB0aGUgY3VycmVudCB1c2VyXG4gICAgY29uc3QgeyBkYXRhOiB7IHVzZXIgfSwgZXJyb3I6IHVzZXJFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKClcbiAgICBpZiAodXNlckVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZXR0aW5nIHVzZXI6JywgdXNlckVycm9yKVxuICAgICAgdGhyb3cgdXNlckVycm9yXG4gICAgfVxuXG4gICAgaWYgKCF1c2VyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgbm90IGZvdW5kJylcbiAgICB9XG5cbiAgICAvLyBVcGRhdGUgdXNlcidzIG1ldGFkYXRhXG4gICAgY29uc3QgeyBlcnJvcjogdXBkYXRlRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGgudXBkYXRlVXNlcih7XG4gICAgICBkYXRhOiB7IFxuICAgICAgICByb2xlOiAnb3duZXInLFxuICAgICAgICBpc0FkbWluOiB0cnVlLFxuICAgICAgICBwZXJtaXNzaW9uczogW1xuICAgICAgICAgICdtZW51OmNyZWF0ZScsXG4gICAgICAgICAgJ21lbnU6cmVhZCcsXG4gICAgICAgICAgJ21lbnU6dXBkYXRlJyxcbiAgICAgICAgICAnbWVudTpkZWxldGUnLFxuICAgICAgICAgICdvcmRlcnM6Y3JlYXRlJyxcbiAgICAgICAgICAnb3JkZXJzOnJlYWQnLFxuICAgICAgICAgICdvcmRlcnM6dXBkYXRlJyxcbiAgICAgICAgICAnYW5hbHl0aWNzOnJlYWQnLFxuICAgICAgICAgICd1c2VyczptYW5hZ2UnXG4gICAgICAgIF1cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgaWYgKHVwZGF0ZUVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGRhdGluZyB1c2VyOicsIHVwZGF0ZUVycm9yKVxuICAgICAgdGhyb3cgdXBkYXRlRXJyb3JcbiAgICB9XG5cbiAgICAvLyBSZWZyZXNoIHRoZSBzZXNzaW9uIHRvIGFwcGx5IGNoYW5nZXNcbiAgICBjb25zdCB7IGVycm9yOiByZWZyZXNoRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGgucmVmcmVzaFNlc3Npb24oKVxuICAgIGlmIChyZWZyZXNoRXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJlZnJlc2hpbmcgc2Vzc2lvbjonLCByZWZyZXNoRXJyb3IpXG4gICAgICB0aHJvdyByZWZyZXNoRXJyb3JcbiAgICB9XG5cbiAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IHNldCBhZG1pbiBhY2Nlc3MnKVxuICAgIHJldHVybiB0cnVlXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gc2V0QWRtaW5BY2Nlc3M6JywgZXJyb3IpXG4gICAgdGhyb3cgZXJyb3JcbiAgfVxufSBcbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJzZXRBZG1pbkFjY2VzcyIsImVtYWlsIiwic3VwYWJhc2UiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsInJvbGVEYXRhIiwiZXJyb3IiLCJyb2xlRXJyb3IiLCJmcm9tIiwic2VsZWN0IiwiZXEiLCJzaW5nbGUiLCJFcnJvciIsInVwZGF0ZVJvbGVFcnJvciIsInVwZGF0ZSIsInJvbGVfaWQiLCJpZCIsInVzZXIiLCJ1c2VyRXJyb3IiLCJhdXRoIiwiZ2V0VXNlciIsInVwZGF0ZUVycm9yIiwidXBkYXRlVXNlciIsInJvbGUiLCJpc0FkbWluIiwicGVybWlzc2lvbnMiLCJyZWZyZXNoRXJyb3IiLCJyZWZyZXNoU2Vzc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/set-admin.ts\n"));

/***/ })

});