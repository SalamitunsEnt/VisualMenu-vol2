"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./lib/context/auth-context.tsx":
/*!**************************************!*\
  !*** ./lib/context/auth-context.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: function() { return /* binding */ AuthProvider; },\n/* harmony export */   useAuth: function() { return /* binding */ useAuth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_supabase_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/supabase/client */ \"(app-pages-browser)/./lib/supabase/client.ts\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [preferences, setPreferences] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const supabase = (0,_lib_supabase_client__WEBPACK_IMPORTED_MODULE_2__.createClient)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"Setting up auth state listener\");\n        // Check active sessions and subscribe to auth changes\n        supabase.auth.getSession().then((param)=>{\n            let { data: { session } } = param;\n            var _session_user;\n            console.log(\"Initial session check:\", (_session_user = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user !== void 0 ? _session_user : \"No user\");\n            var _session_user1;\n            setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n            if (session === null || session === void 0 ? void 0 : session.user) {\n                loadUserPreferences(session.user.id);\n            }\n            setLoading(false);\n        });\n        const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session)=>{\n            var _session_user;\n            console.log(\"Auth state changed:\", _event, (_session_user = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user !== void 0 ? _session_user : \"No user\");\n            var _session_user1;\n            setUser((_session_user1 = session === null || session === void 0 ? void 0 : session.user) !== null && _session_user1 !== void 0 ? _session_user1 : null);\n            if (session === null || session === void 0 ? void 0 : session.user) {\n                loadUserPreferences(session.user.id);\n            } else {\n                setPreferences(null);\n            }\n            setLoading(false);\n        });\n        return ()=>subscription.unsubscribe();\n    }, []);\n    function setInitialPreferences() {\n        return {\n            dietary: [],\n            favorites: [],\n            darkMode: false,\n            language: \"en\"\n        };\n    }\n    async function loadUserPreferences(userId) {\n        try {\n            console.log(\"Loading preferences for user:\", userId);\n            let { data, error } = await supabase.from(\"user_preferences\").select(\"*\").eq(\"user_id\", userId).single();\n            if (error && error.code === \"PGRST116\") {\n                // No preferences found, create new record\n                console.log(\"Creating new preferences for user:\", userId);\n                const initialPrefs = {\n                    user_id: userId,\n                    dietary: [],\n                    favorites: [],\n                    dark_mode: false,\n                    language: \"en\"\n                };\n                const { data: newData, error: insertError } = await supabase.from(\"user_preferences\").insert(initialPrefs).select().single();\n                if (insertError) {\n                    console.error(\"Error creating preferences:\", insertError);\n                    throw insertError;\n                }\n                data = newData;\n            } else if (error) {\n                console.error(\"Error loading preferences:\", error);\n                throw error;\n            }\n            console.log(\"Loaded/created preferences:\", data);\n            if (!data) {\n                throw new Error(\"No preferences data available\");\n            }\n            setPreferences({\n                dietary: Array.isArray(data.dietary) ? data.dietary : [],\n                favorites: Array.isArray(data.favorites) ? data.favorites : [],\n                darkMode: Boolean(data.dark_mode),\n                language: typeof data.language === \"string\" ? data.language : \"en\"\n            });\n        } catch (error) {\n            console.error(\"Error in loadUserPreferences:\", error);\n            setPreferences(setInitialPreferences());\n        }\n    }\n    async function signIn(email, password) {\n        try {\n            console.log(\"Attempting to sign in with:\", email);\n            const { data, error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            if (error) {\n                console.error(\"Sign in error:\", error);\n                // Check for specific error cases\n                if (error.message.includes(\"Email not confirmed\")) {\n                    throw new Error(\"Please confirm your email address before signing in.\");\n                } else if (error.message.includes(\"Invalid login credentials\")) {\n                    throw new Error(\"Invalid email or password. Please check your credentials and try again.\");\n                }\n                throw error;\n            }\n            if (!data.user) {\n                throw new Error(\"No user data returned after successful login\");\n            }\n            console.log(\"Sign in successful:\", data.user);\n            return data.user;\n        } catch (error) {\n            console.error(\"Error in signIn function:\", error);\n            throw error;\n        }\n    }\n    async function signUp(email, password) {\n        try {\n            console.log(\"Attempting to sign up:\", email);\n            const { data, error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    emailRedirectTo: \"\".concat(window.location.origin, \"/auth/callback\"),\n                    data: {\n                        email: email // Add email to user metadata\n                    }\n                }\n            });\n            if (error) {\n                console.error(\"Sign up error:\", error);\n                throw error;\n            }\n            if (!data.user) {\n                throw new Error(\"No user data returned after signup\");\n            }\n            // Check if email confirmation is required\n            if (data.user.identities && data.user.identities.length === 0) {\n                throw new Error(\"A user with this email already exists. Please try signing in instead.\");\n            }\n            if (data.user.confirmed_at === null) {\n                throw new Error(\"Please check your email for a confirmation link to complete your registration.\");\n            }\n            console.log(\"Sign up successful:\", data.user);\n            return data.user;\n        } catch (error) {\n            console.error(\"Error in signUp function:\", error);\n            throw error;\n        }\n    }\n    async function signOut() {\n        try {\n            console.log(\"Attempting to sign out\");\n            const { error } = await supabase.auth.signOut();\n            if (error) {\n                console.error(\"Sign out error:\", error);\n                throw error;\n            }\n            console.log(\"Sign out successful\");\n        } catch (error) {\n            console.error(\"Error in signOut function:\", error);\n            throw error;\n        }\n    }\n    async function updatePreferences(newPreferences) {\n        if (!user) return;\n        try {\n            console.log(\"Updating preferences:\", newPreferences);\n            const { error } = await supabase.from(\"user_preferences\").upsert({\n                user_id: user.id,\n                ...preferences,\n                ...newPreferences,\n                updated_at: new Date().toISOString()\n            });\n            if (error) {\n                console.error(\"Error updating preferences:\", error);\n                throw error;\n            }\n            setPreferences((prev)=>prev ? {\n                    ...prev,\n                    ...newPreferences\n                } : null);\n            console.log(\"Preferences updated successfully\");\n        } catch (error) {\n            console.error(\"Error in updatePreferences:\", error);\n            throw error;\n        }\n    }\n    const value = {\n        user,\n        preferences,\n        loading,\n        signIn,\n        signUp,\n        signOut,\n        updatePreferences\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/olatunde/Github/VisualMenu/lib/context/auth-context.tsx\",\n        lineNumber: 245,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"Zy6teeICwG437NkOwGhIlHukuis=\");\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/context/auth-context.tsx\n"));

/***/ })

});